<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Event.Api</name>
    </assembly>
    <members>
        <member name="T:Event.Api.Controllers.V1.EventController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Event.Api.Controllers.V1.EventController.#ctor(MediatR.IMediator)">
            <summary>
            Manage Users And Roles
            </summary>
            <param name="mediator"></param>
        </member>
        <member name="M:Event.Api.Controllers.V1.EventController.CreateEvent(Event.Application.Features.v1.Events.Command.CreateEventCommand)">
            <summary>
            Create New Event (Authorize)
            </summary>
            <param name="command">CreateEventCommand model</param>
            <returns> event id</returns>
        </member>
        <member name="M:Event.Api.Controllers.V1.EventController.UpdateEvent(Event.Application.Features.v1.Events.Command.UpdateEventCommand)">
            <summary>
            Update Event (Authoriz)
            </summary>
            <param name="command">UpdateEvent model</param>
            <returns> magic string</returns>
        </member>
        <member name="M:Event.Api.Controllers.V1.EventController.Delete(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Event.Api.Controllers.V1.EventController.BookTicket(Event.Application.Features.v1.Events.Command.BookEventCommand)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Event.Api.Controllers.V1.EventController.Mybooked">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Event.Api.Controllers.V1.EventController.GetAllEvents">
            <summary>
            List of available Events (Authorize)
            </summary>
            <returns></returns>
        </member>
        <member name="T:Event.Api.Controllers.V1.ManageController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Event.Api.Controllers.V1.ManageController.#ctor(MediatR.IMediator)">
            <summary>
            Manage Users And Roles
            </summary>
            <param name="mediator"></param>
        </member>
        <member name="M:Event.Api.Controllers.V1.ManageController.CreateUser(Event.Application.Features.v1.Users.Command.CreateUserCommand)">
            <summary>
            register new user
            </summary>
            <param name="command">CreateUserCommand model</param>
            <returns> UserName , UserId</returns>
        </member>
        <member name="M:Event.Api.Controllers.V1.ManageController.LoginUser(Event.Application.Features.v1.Users.Command.LoginUserCommand)">
            <summary>
            Login user to system
            </summary>
            <param name="command"> UserName or Email , UserId</param>
            <returns>UserName , UserId</returns>
        </member>
        <member name="M:Event.Api.Controllers.V1.ManageController.UserInfo">
            <summary>
            Get Logged UserInfo
            </summary>
            <returns></returns>
        </member>
        <member name="T:Event.Api.Extensions.Extensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Event.Api.Extensions.Extensions.GetUserId(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
    </members>
</doc>
